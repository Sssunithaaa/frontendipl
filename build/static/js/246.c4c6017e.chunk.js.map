{"version":3,"file":"static/js/246.c4c6017e.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/transform.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","../node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","../node_modules/framer-motion/dist/es/utils/wrap.mjs","../node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","../node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","../node_modules/framer-motion/dist/es/animation/sequence/create.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","pages/Homepage/Quote.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    stop() {\n        this.runAll(\"stop\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\n\nfunction createVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options, {\n            enableHardwareAcceleration: false,\n        })\n        : new HTMLVisualElement(options, {\n            enableHardwareAcceleration: true,\n        });\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\n\nexport { createVisualElement };\n","import { spring } from '../../animation/generators/spring/index.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100) {\n    const generator = spring({ keyframes: [0, scale], ...options });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numElements = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numElements)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            if (numKeyframes <= 2 && type === \"spring\") {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            /**\n             * Find all the elements specified in the definition and parse value\n             * keyframes from their timeline definitions.\n             */\n            const elements = resolveElements(subject, scope, elementCache);\n            const numElements = elements.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let elementIndex = 0; elementIndex < numElements; elementIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const element = elements[elementIndex];\n                const subjectSequence = getSubjectSequence(element, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), elementIndex, numElements);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? { ...transition, ...transition[key] }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { resolveElements } from '../render/dom/utils/resolve-element.mjs';\nimport { visualElementStore } from '../render/store.mjs';\nimport { invariant } from '../utils/errors.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\nimport { isDOMKeyframes } from './utils/is-dom-keyframes.mjs';\nimport { animateTarget } from './interfaces/visual-element-target.mjs';\nimport { createVisualElement } from './utils/create-visual-element.mjs';\nimport { animateSingleValue } from './interfaces/single-value.mjs';\nimport { createAnimationsFromSequence } from './sequence/create.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\nfunction animateElements(elementOrSelector, keyframes, options, scope) {\n    const elements = resolveElements(elementOrSelector, scope);\n    const numElements = elements.length;\n    invariant(Boolean(numElements), \"No valid element provided.\");\n    const animations = [];\n    for (let i = 0; i < numElements; i++) {\n        const element = elements[i];\n        /**\n         * Check each element for an associated VisualElement. If none exists,\n         * we need to create one.\n         */\n        if (!visualElementStore.has(element)) {\n            /**\n             * TODO: We only need render-specific parts of the VisualElement.\n             * With some additional work the size of the animate() function\n             * could be reduced significantly.\n             */\n            createVisualElement(element);\n        }\n        const visualElement = visualElementStore.get(element);\n        const transition = { ...options };\n        /**\n         * Resolve stagger function if provided.\n         */\n        if (typeof transition.delay === \"function\") {\n            transition.delay = transition.delay(i, numElements);\n        }\n        animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n    }\n    return new GroupPlaybackControls(animations);\n}\nconst isSequence = (value) => Array.isArray(value) && Array.isArray(value[0]);\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope);\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        let animation;\n        if (isMotionValue(subject)) {\n            animation = animateSingleValue(subject, keyframes.default, transition.default);\n        }\n        else {\n            animation = animateElements(subject, keyframes, transition);\n        }\n        animations.push(animation);\n    });\n    return new GroupPlaybackControls(animations);\n}\nconst createScopedAnimate = (scope) => {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(valueOrElementOrSequence, keyframes, options) {\n        let animation;\n        if (isSequence(valueOrElementOrSequence)) {\n            animation = animateSequence(valueOrElementOrSequence, keyframes, scope);\n        }\n        else if (isDOMKeyframes(keyframes)) {\n            animation = animateElements(valueOrElementOrSequence, keyframes, options, scope);\n        }\n        else {\n            animation = animateSingleValue(valueOrElementOrSequence, keyframes, options);\n        }\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n};\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import React from \"react\";\r\nimport { motion, useMotionValue, useTransform, animate } from \"framer-motion\";\r\nimport { fadeIn } from \"../../utils/motion\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ScrollDownArrow from \"../../Components/ScrollDown\";\r\n\r\nconst Quote = ({ sectionRefs, images, showQuoteArrow, ScrollDownArrow }) => {\r\n  const texts = [\r\n    {\r\n      \"Sachin Tendulkar\":\r\n        \"IPL is not just a cricket tournament; it's a celebration of the sport, uniting players and fans from all over the world.\",\r\n    },\r\n  ];\r\n\r\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\r\n  const currentText = Object.keys(texts[currentTextIndex])[0];\r\n  const baseText = Object.values(texts[currentTextIndex])[0];\r\n\r\n  const count = useMotionValue(0);\r\n  const roundedCount = useTransform(count, Math.round);\r\n  const displayText = useTransform(roundedCount, (latest) =>\r\n    baseText.slice(0, latest)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const animation = animate(count, baseText.length, {\r\n      type: \"tween\",\r\n      duration: 7,\r\n      ease: \"easeIn\",\r\n      repeat: 1,\r\n      repeatDelay: 1,\r\n    });\r\n\r\n    return () => {\r\n      animation.stop();\r\n    };\r\n  }, [baseText.length]); // Ensure animation restarts when baseText changes\r\n\r\n  const handleTextChange = () => {\r\n    const nextTextIndex = (currentTextIndex + 1) % texts.length;\r\n    setCurrentTextIndex(nextTextIndex);\r\n  };\r\n  return (\r\n    <div className=\"lg:flex lg:flex-row mx-0 sm:mx-10 md:mx-10 flex flex-col lg:w-[100vw] lg:justify-center lg:items-center lg:h-[90vh]\">\r\n      <motion.div\r\n        whileInView=\"show\"\r\n        viewport={{ once: true, amount: 0.25 }}\r\n        initial=\"hidden\"\r\n        variants={fadeIn(\"right\", \"spring\", 0.5, 2)}\r\n        className=\"my-3 overflow-hidden h-[45%] w-[100%] lg:w-[50%] rounded-xl \"\r\n        style={{ position: \"relative\" }}\r\n      >\r\n        <div className=\"w-[80vw] lg:w-[70%] my-10 flex flex-col justify-center items-center mx-auto p-5 bg-[#faf9fd] shadow-[4.0px_8.0px_8.0px_rgba(0,0,0,0.38)]\">\r\n          <img\r\n            src={images.sachin}\r\n            alt=\"\"\r\n            className=\"w-14 h-auto rounded-full my-3 mx-auto\"\r\n          />\r\n\r\n          <motion.div>{displayText}</motion.div>\r\n          <p className=\"font-bold text-purple-950\">-&nbsp;{currentText}</p>\r\n        </div>\r\n      </motion.div>\r\n      <motion.div\r\n        whileInView=\"show\"\r\n        viewport={{ once: true, amount: 0.25 }}\r\n        initial=\"hidden\"\r\n        className=\"flex flex-col text-secondary w-[80%] lg:w-[50%] mx-auto lg:m-[100px] p-2 bg-[#faf9fd] shadow-[4.0px_8.0px_8.0px_rgba(0,0,0,0.38)] rounded-md justify-center items-center my-4\"\r\n        variants={fadeIn(\"left\", \"spring\", 0.5, 2)}\r\n      >\r\n        <div className=\"lg:w-[100%] flex\">\r\n          <img\r\n            src={images.crowd}\r\n            alt=\"teams\"\r\n            className=\"w-[100%] mx-auto rounded-md\"\r\n          />\r\n        </div>\r\n        <div className=\"py-4 text-black font-semibold\">\r\n          In a clash of titans, ten formidable teams compete for ultimate glory.\r\n          Who will emerge triumphant and etch their name in history?\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quote;\r\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","getMixer","v","mix","isCustomValueType","undefined","useCombineMotionValues","values","combineValues","updateValue","set","useIsomorphicLayoutEffect","scheduleUpdate","frame","update","subscriptions","map","forEach","unsubscribe","cancelFrame","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","collectMotionValues","current","useComputed","transformer","useImmediate","Array","isArray","arguments","length","argOffset","inputValue","inputRange","interpolator","interpolate","mixer","transform","useListTransform","_ref","latest","numValues","i","get","resolveElements","elements","scope","selectorCache","_a","root","document","invariant","Boolean","querySelectorAll","Element","from","supportsScrollTimeline","memo","window","ScrollTimeline","GroupPlaybackControls","constructor","animations","this","filter","then","onResolve","onReject","Promise","all","catch","getAll","propName","setAll","newValue","attachTimeline","timeline","cancelAll","animation","pause","prevProgress","onFrame","currentTime","progress","observeTimeline","time","duration","cancelTimeline","stop","speed","max","Math","runAll","methodName","controls","play","cancel","complete","createVisualElement","element","presenceContext","props","visualState","renderState","transformOrigin","style","vars","attrs","latestValues","node","isSVGElement","SVGVisualElement","enableHardwareAcceleration","HTMLVisualElement","mount","visualElementStore","createGeneratorEasing","scale","generator","spring","keyframes","min","calcGeneratorDuration","maxGeneratorDuration","type","ease","next","millisecondsToSeconds","calcNextTime","prev","labels","startsWith","parseFloat","wrap","rangeSize","getEasingForSegment","easing","isEasingArray","addKeyframes","sequence","offset","startTime","endTime","keyframe","at","removeItem","eraseKeyframes","push","mixNumber","compareByTime","a","b","defaultSegmentEasing","getSubjectSequence","subject","sequences","has","getValueSequence","name","keyframesAsList","getValueTransition","transition","key","isNumber","isNumberKeyframesArray","every","animateElements","elementOrSelector","numElements","visualElement","delay","animateTarget","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","defaultDuration","Map","elementCache","timeLabels","prevTime","totalDuration","segment","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","times","defaultOffset","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","delta","abs","springTransition","secondsToMilliseconds","springEasing","targetTime","remainder","fillOffset","unshift","isMotionValue","subjectSequence","valueSequences","sort","valueOffset","valueEasing","definition","createAnimationsFromSequence","animateSingleValue","default","animate","valueOrElementOrSequence","isDOMKeyframes","sectionRefs","images","showQuoteArrow","ScrollDownArrow","texts","currentTextIndex","setCurrentTextIndex","currentText","Object","keys","baseText","count","roundedCount","round","displayText","slice","repeat","repeatDelay","_jsxs","className","children","_jsx","motion","div","whileInView","viewport","once","amount","variants","fadeIn","position","src","sachin","alt","crowd"],"sourceRoot":""}